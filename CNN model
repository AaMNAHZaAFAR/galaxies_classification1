from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D, Flatten, Dense

# Initialize the CNN model
model = Sequential()

# Add convolutional layer with 32 filters, 3x3 kernel, and ReLU activation function
model.add(Conv2D(32, (3, 3), activation='relu', input_shape=(64, 64, 3)))

# Add max pooling layer with 2x2 pool size
model.add(MaxPooling2D(pool_size=(2, 2)))

# Add another convolutional layer with 64 filters, 3x3 kernel, and ReLU activation function
model.add(Conv2D(64, (3, 3), activation='relu'))

# Add another max pooling layer with 2x2 pool size
model.add(MaxPooling2D(pool_size=(2, 2)))

# Flatten the output from the previous layer
model.add(Flatten())

# Add a fully connected layer with 128 neurons and ReLU activation function
model.add(Dense(units=128, activation='relu'))

# Add the output layer with softmax activation function for multi-class classification
model.add(Dense(units=5, activation='softmax'))

# Compile the model with categorical cross-entropy loss function and Adam optimizer
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
